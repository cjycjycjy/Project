package com.myserver.skp.controller;

import java.util.GregorianCalendar;
import java.util.List;

import javax.annotation.Resource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.myserver.skp.dao.AfterwordDao;
import com.myserver.skp.dao.AfterwordReplyDao;
import com.myserver.skp.vo.AfterwordReplyVo;
import com.myserver.skp.vo.AfterwordVo;


@Controller
public class AfterwordController {
	private static final Logger logger = LoggerFactory.getLogger(AfterwordController.class);

	/**
	 * Simply selects the home view to render by returning its name.
	 */

	@Resource
	private AfterwordDao afterwordDao;
	
	@Resource
	private AfterwordReplyDao afterwordReplyDao;

	@RequestMapping(value = "/getafterword", method = RequestMethod.GET)
	public @ResponseBody List<AfterwordVo> getAfterword(@RequestParam("p_id") int p_id) {
		List<AfterwordVo> afterwordList = afterwordDao.getSelectAllofAfterword(p_id);
		for(int i=0; i<afterwordList.size(); i++){
			int a_id = afterwordList.get(i).getA_id();
			afterwordList.get(i).setAfterword_reply(afterwordReplyDao.getSelectAllofAfterword(a_id));
		}
        return afterwordList;
	}
	
	@RequestMapping(value = "/registerafterwordreply", method = RequestMethod.GET)
	public @ResponseBody List<AfterwordReplyVo> registerAfterwordreply(@RequestParam("u_id") String u_id,
																  @RequestParam("a_id") int a_id,
																  @RequestParam("a_r_content") String a_r_content) {
		
		GregorianCalendar today = new GregorianCalendar();
		int a_r_year = today.get ( today.YEAR );
		int a_r_month = today.get ( today.MONTH ) + 1;
		int a_r_day = today.get ( today.DAY_OF_MONTH ); 
		
		AfterwordReplyVo afterwordReplyVo = new AfterwordReplyVo(u_id, a_id, a_r_content, a_r_year, a_r_month, a_r_day);
		
		afterwordReplyDao.insertAfterwordReply(afterwordReplyVo);
		afterwordDao.updateAfterwordReplyNum(a_id);
		
		
		List<AfterwordReplyVo> afterwordReplyList = afterwordReplyDao.getSelectAllofAfterword(a_id);
		
		return afterwordReplyList;
	}
}