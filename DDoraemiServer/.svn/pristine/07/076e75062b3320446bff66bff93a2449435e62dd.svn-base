package com.myserver.skp.controller;

import java.util.GregorianCalendar;
import java.util.List;

import javax.annotation.Resource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.myserver.skp.dao.QuestionDao;
import com.myserver.skp.dao.QuestionReplyDao;
import com.myserver.skp.vo.AfterwordReplyVo;
import com.myserver.skp.vo.QuestionReplyVo;
import com.myserver.skp.vo.QuestionVo;

@Controller
public class QuestionController {
	private static final Logger logger = LoggerFactory.getLogger(AfterwordController.class);

	/**
	 * Simply selects the home view to render by returning its name.
	 */

	@Resource
	private QuestionDao questionDao;

	@Resource
	private QuestionReplyDao questionReplyDao;

	@RequestMapping(value = "/getquestion", method = RequestMethod.GET)
	public @ResponseBody List<QuestionVo> getQuestion(@RequestParam("g_id") int g_id) {
		List<QuestionVo> questionList = questionDao.getSelectAllofQuestion(g_id);
		//for(int i=0; i<questionList.size(); i++){
		//	int q_id = questionList.get(i).getQ_id();
		//	questionList.get(i).setQuestion_reply(questionReplyDao.getSelectAllofQuestionReply(q_id));
		//}
		return questionList;
	}

	@RequestMapping(value = "/registerquestionreply", method = RequestMethod.GET)
	public @ResponseBody List<QuestionReplyVo> registerQuestionReply(@RequestParam("u_id") String u_id,
			@RequestParam("q_id") int q_id,
			@RequestParam("q_r_content") String q_r_content) {

		GregorianCalendar today = new GregorianCalendar();
		int q_r_year = today.get ( today.YEAR );
		int q_r_month = today.get ( today.MONTH ) + 1;
		int q_r_day = today.get ( today.DAY_OF_MONTH ); 

		QuestionReplyVo questionReplyVo = new QuestionReplyVo(u_id, q_id, q_r_content, q_r_year, q_r_month, q_r_day);

		questionReplyDao.insertQuestionReply(questionReplyVo);
		questionDao.updateQuestionReplyNum(q_id);


		List<QuestionReplyVo> questionReplyList = questionReplyDao.getSelectAllofQuestionReply(q_id);

		return questionReplyList;
	}
	
	@RequestMapping(value = "/registerquestion", method = RequestMethod.GET)
	public @ResponseBody List<QuestionVo> registerQuestion(@RequestParam("u_id") String u_id,
			@RequestParam("g_id") int g_id,
			@RequestParam("q_content") String q_content) {

		GregorianCalendar today = new GregorianCalendar();
		int q_year = today.get ( today.YEAR );
		int q_month = today.get ( today.MONTH ) + 1;
		int q_day = today.get ( today.DAY_OF_MONTH ); 

		QuestionVo questionVo = new QuestionVo(u_id, g_id, q_content, q_year, q_month, q_day);

		questionDao.insertQeustion(questionVo);


		List<QuestionVo> questionList = questionDao.getSelectAllofQuestion(g_id);
		for(int i=0; i<questionList.size(); i++){
			int q_id = questionList.get(i).getQ_id();
			questionList.get(i).setQuestion_reply(questionReplyDao.getSelectAllofQuestionReply(q_id));
		}

		return questionList;
	}
}
