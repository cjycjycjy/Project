package com.myserver.skp.controller;

import java.io.IOException;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.apache.ibatis.annotations.Param;
import org.codehaus.jackson.map.ObjectMapper;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.myserver.skp.dao.UserDao;
import com.myserver.skp.vo.UserVo;

@Controller
public class UserController {
	private static final Logger logger = LoggerFactory.getLogger(TestController.class);

	/**
	 * Simply selects the home view to render by returning its name.
	 */

	@Resource
	private UserDao userDao;

	@RequestMapping(value = "/signup", method = RequestMethod.GET)
	public @ResponseBody String signup_get(HttpServletRequest req) 
	{
		return "500";
	}

	@RequestMapping(value = "/signup", method = RequestMethod.POST)
	public @ResponseBody String signup_post(@RequestBody JSONObject json) 
	{
		UserVo user=null;

		try {
			ObjectMapper mapper = new ObjectMapper();
			user = mapper.readValue(json.toString(), UserVo.class);
			userDao.insertBase(user);
			return "200";

		}  catch (IOException e){
			return "500";
		}
	}


	@RequestMapping(value = "/login", method = RequestMethod.GET)
	public @ResponseBody String login_get(HttpServletRequest req) 
	{
		return "500";
	}

	@RequestMapping(value = "/login", method = RequestMethod.POST)
	public @ResponseBody String login_post(@RequestParam("u_id") String u_id, 
			@RequestParam("password") String password) 
	{
		String result_u_id = userDao.login(u_id, password);

		if(result_u_id != null && result_u_id.equals(u_id))
			return "200";


		return "500";
	}



	@RequestMapping(value = "/idcheck", method = RequestMethod.GET)
	public @ResponseBody String idCheck(@RequestParam("u_id") String u_id) 
	{
		UserVo user= userDao.idCheck(u_id);

		if(user==null)
			return "200";
		else
			return "500";
	}
	
	@RequestMapping(value = "/findpassword", method = RequestMethod.GET)
	public @ResponseBody String findPasswordGet() 
	{
		return "500";
	}
	
	
	@RequestMapping(value = "/findpassword", method = RequestMethod.POST)
	public @ResponseBody String findPasswordPost(@RequestParam("u_id") String u_id, @RequestParam("u_phone") String u_phone){
		
		return "500";
	}
	
	@RequestMapping(value = "/confirmphone", method = RequestMethod.POST)
	public @ResponseBody String confirmPhone(@RequestParam("u_phone") String u_phone){

		return "500";
	}
	
	
}
