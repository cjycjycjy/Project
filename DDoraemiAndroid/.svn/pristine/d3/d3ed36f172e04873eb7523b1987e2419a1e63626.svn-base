package ddoraemi.myinfopage.presenter;

import java.util.ArrayList;
import java.util.Hashtable;

import com.google.gson.JsonArray;
import com.google.gson.JsonObject;

import ddoraemi.appcontroller.AppController;
import ddoraemi.detailediteminfo.model.Afterword;
import ddoraemi.detailediteminfo.model.AfterwordReply;
import ddoraemi.home.model.Group;
import ddoraemi.home.model.ProgramData;
import ddoraemi.myinfopage.model.MyPageInteractor;
import ddoraemi.myinfopage.model.MyPageInteractorInterface;
import ddoraemi.myinfopage.view.MyPageView;

public class MyPagePresenter implements MyPagePresenterInterface,
		OnMyPageFinishedListner {

	private MyPageView view;
	private MyPageInteractorInterface myPageInteractor;
	ArrayList<Group> pastgroup;
	ArrayList<ProgramData> wishprogram;
	ArrayList<Group> particiategroup;
	Hashtable<Integer, Afterword> myafterword;
	private AppController app;

	public MyPagePresenter(MyPageView view) {
		// TODO Auto-generated constructor stub
		this.view = view;
		myPageInteractor = new MyPageInteractor();
		pastgroup = new ArrayList<>();
		wishprogram = new ArrayList<>();
		particiategroup = new ArrayList<>();
		myafterword = new Hashtable<>();
		app = (AppController) view.getActivity().getApplicationContext();
	}

	@Override
	public void validateCredentials(String event) {
		// TODO Auto-generated method stub
		if (event.equals("getMypageInfo")) {
			myPageInteractor.getMyPageInfo(view.getActivity(), this,
					app.getId());
		}

	}

	@Override
	public void OnGetDataSuccess(JsonObject data) {
		// TODO Auto-generated method stub
		// //오브젝트를 지지고 볶은다음에
		JsonArray particiateArray = data.get("join_gathering").getAsJsonArray();
		JsonArray wishArray = data.get("bookmark").getAsJsonArray();
		JsonArray pastArray = data.get("passer_program").getAsJsonArray();
		for (int i = 0; i < particiateArray.size(); i++) {
			JsonObject dataobj = (JsonObject) particiateArray.get(i);
			int p_id = (dataobj.get("p_id")).getAsInt();
			String p_name = (dataobj.get("p_name")).getAsString();
			String p_addr = (dataobj.get("p_addr")).getAsString();
			int g_id = (dataobj.get("g_id")).getAsInt();
			String g_name = (dataobj.get("g_name")).getAsString();

			String g_info = (dataobj.get("g_info")).getAsString();
			int g_status = (dataobj.get("g_status")).getAsInt();
			int g_persons = (dataobj.get("g_persons")).getAsInt();
			String e_name = (dataobj.get("e_name")).getAsString();

			String u_id = (dataobj.get("u_id")).getAsString();

			int g_want_persons = (dataobj.get("g_want_persons")).getAsInt();

			int g_open_year = (dataobj.get("g_open_year")).getAsInt();
			int g_open_month = (dataobj.get("g_open_month")).getAsInt();
			int g_open_day = (dataobj.get("g_open_day")).getAsInt();
			int g_close_year = (dataobj.get("g_close_year")).getAsInt();
			int g_close_month = (dataobj.get("g_close_month")).getAsInt();
			int g_close_day = (dataobj.get("g_close_day")).getAsInt();
			int g_start_year = (dataobj.get("g_start_year")).getAsInt();
			int g_start_month = (dataobj.get("g_start_month")).getAsInt();
			int g_start_day = (dataobj.get("g_start_day")).getAsInt();
			int g_start_hour = (dataobj.get("g_start_hour")).getAsInt();
			int g_start_minute = (dataobj.get("g_start_minute")).getAsInt();
			int g_end_hour = (dataobj.get("g_end_hour")).getAsInt();
			int g_end_minute = (dataobj.get("g_end_minute")).getAsInt();
			String p_photo_url = (dataobj.get("p_photo_url")).getAsString();
			particiategroup.add(new Group(g_id, p_id, u_id, g_name, g_persons,
					g_want_persons, g_info, g_status, g_open_year,
					g_open_month, g_open_day, g_close_year, g_close_month,
					g_close_day, g_start_year, g_start_month, g_start_day,
					g_start_hour, g_start_minute, g_end_hour, g_end_minute,
					e_name, p_name, p_addr, p_photo_url));
		}

		for (int i = 0; i < wishArray.size(); i++) {
			JsonObject dataobj = (JsonObject) wishArray.get(i);
			int p_id = (dataobj.get("p_id")).getAsInt();
			String p_name = (dataobj.get("p_name")).getAsString();
			String p_town_name = (dataobj.get("p_town_name")).getAsString();

			int p_min_persons = (dataobj.get("p_min_persons")).getAsInt();
			int p_max_persons = (dataobj.get("p_max_persons")).getAsInt();
			int p_lead_time = (dataobj.get("p_lead_time")).getAsInt();

			String p_note = (dataobj.get("p_note")).getAsString();
			String p_addr_1 = (dataobj.get("p_addr_1")).getAsString();
			String p_addr_2 = (dataobj.get("p_addr_2")).getAsString();
			String p_addr_3 = (dataobj.get("p_addr_3")).getAsString();
			String p_addr_4 = (dataobj.get("p_addr_4")).getAsString();
			String p_addr_5 = (dataobj.get("p_addr_5")).getAsString();
			String p_addr_6 = (dataobj.get("p_addr_6")).getAsString();

			int a_id = (dataobj.get("a_id")).getAsInt();
			String p_url = (dataobj.get("p_url")).getAsString();

			String p_info = (dataobj.get("p_info")).getAsString();
			String e_name = (dataobj.get("e_name")).getAsString();
			String p_cost_adult = (dataobj.get("p_cost_adult")).getAsString();
			String p_cost_kid = (dataobj.get("p_cost_kid")).getAsString();

			String p_available_season = (dataobj.get("p_available_season"))
					.getAsString();

			String p_preparation_item = (dataobj.get("p_preparation_item"))
					.getAsString();

			String p_tel = (dataobj.get("p_tel")).getAsString();

			int p_is_available_overnight = (dataobj
					.get("p_is_available_overnight")).getAsInt();
			long p_grade = (dataobj.get("p_grade")).getAsLong();
			String p_photo_url = (dataobj.get("p_photo_url").getAsString());
			JsonArray p_curriculum = (dataobj.get("p_curriculum")
					.getAsJsonArray());

			ArrayList<String> cur_list = new ArrayList<>();

			for (int k = 0; k < p_curriculum.size(); k++) {
				JsonObject cur = (JsonObject) p_curriculum.get(k);
				String cur_info = cur.get("cur").getAsString();
				cur_list.add(cur_info);
			}
			this.wishprogram.add(new ProgramData(p_id, p_name, p_info, e_name,
					p_cost_adult, p_cost_kid, p_min_persons, p_max_persons,
					p_available_season, p_lead_time, p_preparation_item,
					p_town_name, p_addr_1, p_addr_2, p_addr_3, p_addr_4,
					p_addr_5, p_addr_6, p_tel, p_url, p_is_available_overnight,
					p_photo_url, cur_list, p_note, p_grade, a_id));

		}
		for (int i = 0; i < pastArray.size(); i++) {
			JsonObject dataobj = (JsonObject) pastArray.get(i);
			int p_id = (dataobj.get("p_id")).getAsInt();
			String p_name = (dataobj.get("p_name")).getAsString();
			String p_addr = (dataobj.get("p_addr")).getAsString();
			int g_id = (dataobj.get("g_id")).getAsInt();
			String g_name = (dataobj.get("g_name")).getAsString();
			String g_info = (dataobj.get("g_info")).getAsString();
			int g_status = (dataobj.get("g_status")).getAsInt();
			int g_persons = (dataobj.get("g_persons")).getAsInt();
			String e_name = (dataobj.get("e_name")).getAsString();
			String u_id = (dataobj.get("u_id")).getAsString();
			int g_want_persons = (dataobj.get("g_want_persons")).getAsInt();
			int g_open_year = (dataobj.get("g_open_year")).getAsInt();
			int g_open_month = (dataobj.get("g_open_month")).getAsInt();
			int g_open_day = (dataobj.get("g_open_day")).getAsInt();
			int g_close_year = (dataobj.get("g_close_year")).getAsInt();
			int g_close_month = (dataobj.get("g_close_month")).getAsInt();
			int g_close_day = (dataobj.get("g_close_day")).getAsInt();
			int g_start_year = (dataobj.get("g_start_year")).getAsInt();
			int g_start_month = (dataobj.get("g_start_month")).getAsInt();
			int g_start_day = (dataobj.get("g_start_day")).getAsInt();
			int g_start_hour = (dataobj.get("g_start_hour")).getAsInt();
			int g_start_minute = (dataobj.get("g_start_minute")).getAsInt();
			int g_end_hour = (dataobj.get("g_end_hour")).getAsInt();
			int g_end_minute = (dataobj.get("g_end_minute")).getAsInt();
			String p_photo_url = (dataobj.get("p_photo_url")).getAsString();
			Group temp = new Group(g_id, p_id, u_id, g_name, g_persons,
					g_want_persons, g_info, g_status, g_open_year,
					g_open_month, g_open_day, g_close_year, g_close_month,
					g_close_day, g_start_year, g_start_month, g_start_day,
					g_start_hour, g_start_minute, g_end_hour, g_end_minute,
					e_name, p_name, p_addr, p_photo_url);
			temp.setMyafterwordnum(-1);
			temp.setMyafterwordscore(0);
			if (dataobj.has("afterword")) {
				JsonObject afterwordob = dataobj.getAsJsonObject("afterword");
				int a_id = (afterwordob.get("a_id")).getAsInt();
				String a_content = (afterwordob.get("a_content")).getAsString();
				int a_grade = (afterwordob.get("a_grade")).getAsInt();
				temp.setMyafterwordnum(a_id);
				temp.setMyafterwordscore(a_grade);
				int a_year = (afterwordob.get("a_year")).getAsInt();
				int a_month = (afterwordob.get("a_month")).getAsInt();
				int a_day = (afterwordob.get("a_day")).getAsInt();
				int a_r_num = (afterwordob.get("a_r_num")).getAsInt();
				ArrayList<AfterwordReply> afterword_reply;
				afterword_reply = new ArrayList<AfterwordReply>();
				JsonArray reply = afterwordob.get("afterword_reply")
						.getAsJsonArray();
				JsonArray photo = afterwordob.get("a_photo_url")
						.getAsJsonArray();
				ArrayList<String> a_photo_url = new ArrayList<String>();
				String a_u_photo_url = "empty";
				if (dataobj.has("u_photo_url")) {
					a_u_photo_url = dataobj.get("u_photo_url").getAsString();
				}

				for (int j = 0; j < reply.size(); j++) {
					JsonObject obj = (JsonObject) reply.get(j);
					int a_r_id = (obj.get("a_r_id")).getAsInt();
					int a_id2 = (obj.get("a_id")).getAsInt();
					String a_r_content = (obj.get("a_r_content")).getAsString();
					int a_r_year = (obj.get("a_r_year")).getAsInt();
					int a_r_month = (obj.get("a_r_month")).getAsInt();
					int a_r_day = (obj.get("a_r_day")).getAsInt();
					String u_id2 = (obj.get("u_id")).getAsString();
					String ar_u_photo_url = "empty";
					if (obj.has("u_photo_url")) {
						if(obj.get("u_photo_url").isJsonNull())
						{
							ar_u_photo_url="";
							
						}
						else
						{
						ar_u_photo_url = (obj.get("u_photo_url")).getAsString();
						}
					}
					afterword_reply.add(new AfterwordReply(a_r_id, a_id2,
							a_r_content, a_r_year, a_r_month, a_r_day, u_id2,
							ar_u_photo_url));
				}
				if (photo.size() == 0) {
					a_photo_url.add("empty");
				} else {
					for (int k = 0; k < photo.size(); k++) {
						JsonObject obj = (JsonObject) photo.get(k);
						String url = obj.get("a_photo_url").getAsString();
						a_photo_url.add(url);
					}
				}
				myafterword.put(a_id, new Afterword(a_id, g_id, u_id,
						a_content, a_grade, a_year, a_month, a_day, a_r_num,
						afterword_reply, a_photo_url, a_u_photo_url));
			}
			pastgroup.add(temp);
		}

		view.setArrayList(particiategroup, wishprogram, pastgroup, myafterword);

	}

}
