package ddoraemi.detailediteminfo.view;

import java.util.ArrayList;

import android.content.Intent;
import android.graphics.RectF;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.app.FragmentTransaction;
import android.support.v4.util.SparseArrayCompat;
import android.support.v4.view.ViewPager;
import android.util.TypedValue;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AbsListView;
import android.widget.ImageView;
import android.widget.RelativeLayout;

import com.astuetz.PagerSlidingTabStrip;
import com.nineoldandroids.view.ViewHelper;
import com.skp.Tmap.TMapView;

import ddoraemi.detailediteminfo.model.Afterword;
import ddoraemi.detailediteminfo.presenter.DetailedItemInfo_Presenter;
import ddoraemi.detailediteminfo.presenter.DetailedItemInfo_Presenter_Interface;
import ddoraemi.home.model.ProgramData;
import ddoraemi.start.R;

public class DetailedItemInfo_View extends FragmentActivity implements
		DetailedIteminfo_View_Interface, ScrollTabHolder,
		ViewPager.OnPageChangeListener ,OnClickListener{

	DetailedItemInfo_Presenter_Interface presenter;

	private PagerSlidingTabStrip tabs;
	private ViewPager pager;
	private PagerAdapter adapter;
	private ProgramData item;
	private ImageView iv_type;
	private RelativeLayout t_map = null;
	private int mMinHeaderHeight;
	private int mHeaderHeight;
	private int mMinHeaderTranslation;
	TMapView t_MapView;
	View mHeader;

	@Override
	protected void onCreate(Bundle arg0) {
		// TODO Auto-generated method stub
		super.onCreate(arg0);
		setContentView(R.layout.activity_detailedinfo);
		init();
	}

	public void init() {
		mMinHeaderHeight = getResources().getDimensionPixelSize(
				R.dimen.min_header_height);
		mHeaderHeight = getResources().getDimensionPixelSize(
				R.dimen.header_height);
		mMinHeaderTranslation = -mMinHeaderHeight;
		mHeader = findViewById(R.id.header);
		presenter = new DetailedItemInfo_Presenter(this);
		item = new ProgramData();
		Intent intent = getIntent();
		item = (ProgramData) intent.getSerializableExtra("item");
		presenter.validatecredential("detailedinfo", item.getP_id());

		iv_type = (ImageView) findViewById(R.id.iv_challenge_type);
		// item占쎌벥 type占쎈퓠 占쎈뎡占쎌뵬 ImageView src 占쎄퐬占쎌젟
		String p_type = item.getP_type();

		if (p_type.equalsIgnoreCase("臾명솕泥댄뿕")) {
			iv_type.setImageResource(R.drawable.bg_culture_icon);
		} else if (p_type.equalsIgnoreCase("�쟾�넻�쓬�떇泥댄뿕")) {
			iv_type.setImageResource(R.drawable.bg_traditionalfood_icon);
		} else if (p_type.equalsIgnoreCase("寃쎌옉泥댄뿕")) {
			iv_type.setImageResource(R.drawable.bg_planting_icon);
		} else if (p_type.equalsIgnoreCase("�닔�솗泥댄뿕")) {
			iv_type.setImageResource(R.drawable.bg_harvest_icon);
		} else if (p_type.equalsIgnoreCase("怨듭삁泥댄뿕")) {
			iv_type.setImageResource(R.drawable.bg_craft_icon);
		} else if (p_type.equalsIgnoreCase("�쟾�넻���씠泥댄뿕")) {
			iv_type.setImageResource(R.drawable.bg_traditionalplay_icon);
		} else if (p_type.equalsIgnoreCase("�옄�뿰泥댄뿕")) {
			iv_type.setImageResource(R.drawable.bg_nature_icon);
		} else {
			iv_type.setImageResource(R.drawable.bg_cooking_icon);
		}

	}

	public void removeAllStack()// /Fragment �뜝�룞�삕�뜝�룞�삕�뜝�룞�삕 �뜝�뙐釉앹삕�뜝�룞�삕.
	{
		FragmentManager fragmentmanager = getSupportFragmentManager();
		FragmentTransaction fragmenttransaction = fragmentmanager
				.beginTransaction();
		int cnt = fragmentmanager.getBackStackEntryCount();
		for (int i = 0; i < cnt; i++) {
			fragmentmanager.popBackStack();
		}
	}

	@Override
	public void setViewPager(ArrayList<Afterword> afterword, ProgramData item) {
		// TODO Auto-generated method stub
		pager = (ViewPager) findViewById(R.id.fragment_detailediteminfo_pager);
		tabs = (PagerSlidingTabStrip) findViewById(R.id.fragment_detailediteminfo_tabs);
		adapter = new PagerAdapter(getSupportFragmentManager(), afterword, item);
		adapter.setTabHolderScrollingContent(this);
		pager.setAdapter(adapter);
		pager.setOffscreenPageLimit(2);
		final int pageMargin = (int) TypedValue.applyDimension(
				TypedValue.COMPLEX_UNIT_DIP, 4, getResources()
						.getDisplayMetrics());
		pager.setPageMargin(pageMargin);
		tabs.setViewPager(pager);
		tabs.setOnPageChangeListener(this);
	}

	public class PagerAdapter extends FragmentPagerAdapter {
		private String[] Title = { "�긽�꽭�젙蹂�", "�썑湲�" };
		ProgramData item;
		ArrayList<Afterword> afterword;
		private SparseArrayCompat<ScrollTabHolder> mScrollTabHolders;
		private ScrollTabHolder mListener;

		public PagerAdapter(FragmentManager fm, ArrayList<Afterword> afterword,
				ProgramData item) {
			super(fm);
			mScrollTabHolders = new SparseArrayCompat<ScrollTabHolder>();
			this.item = new ProgramData(item.getP_id(), item.getP_name(),
					item.getP_town_name(), item.getP_addr_1(),
					item.getP_addr_2(), item.getP_addr_3(), item.getP_addr_4(),
					item.getP_addr_5(), item.getP_addr_6(), item.getCost(),
					item.getP_min_persons(), item.getP_max_persons(),
					item.getP_lead_time(), item.getP_note(),
					item.isP_is_possible(), item.getP_type(), item.getA_id(),
					item.getP_url());
			this.item = item;
			this.afterword = new ArrayList<Afterword>();
			this.afterword.addAll(afterword);
		}

		public void setTabHolderScrollingContent(ScrollTabHolder listener) {
			mListener = listener;
		}

		@Override
		public int getItemPosition(Object object) {
			return POSITION_NONE;
		}

		@Override
		public int getCount() {
			return Title.length;
		}

		@Override
		public CharSequence getPageTitle(int position) {

			return Title[position];
		};

		@Override
		public Fragment getItem(int position) {
			ScrollTabHolderFragment fragment;
			if (position == 0) {
				fragment = new DetailedItemInfo_InfoView(item);
			} else {
				fragment = new DetailedItemInfo_AfterwordView(afterword);
			}
			mScrollTabHolders.put(position, fragment);
			fragment.setScrollTabHolder(mListener);
			return fragment;

		}

		public SparseArrayCompat<ScrollTabHolder> getScrollTabHolders() {
			return mScrollTabHolders;
		}
	}

	@Override
	public void setProgramList(ArrayList<Afterword> data) {
		// TODO Auto-generated method stub
		setViewPager(data, item);
	}

	@Override
	public void onPageScrollStateChanged(int arg0) {
		// nothing
	}

	@Override
	public void onPageScrolled(int position, float positionOffset,
			int positionOffsetPixels) {
		// nothing
	}

	@Override
	public void onPageSelected(int position) {
		SparseArrayCompat<ScrollTabHolder> scrollTabHolders = adapter
				.getScrollTabHolders();
		ScrollTabHolder currentHolder = scrollTabHolders.valueAt(position);

		currentHolder.adjustScroll((int) (mHeader.getHeight() + ViewHelper
				.getTranslationY(mHeader)));
	}

	@Override
	public void onScroll(AbsListView view, int firstVisibleItem,
			int visibleItemCount, int totalItemCount, int pagePosition) {
		if (pager.getCurrentItem() == pagePosition) {
			int scrollY = getScrollY(view);
			ViewHelper.setTranslationY(mHeader,
					Math.max(-scrollY, mMinHeaderTranslation));
		}
	}

	@Override
	public void adjustScroll(int scrollHeight) {
		// nothing
	}

	public int getScrollY(AbsListView view) {
		View c = view.getChildAt(0);
		if (c == null) {
			return 0;
		}

		int firstVisiblePosition = view.getFirstVisiblePosition();
		int top = c.getTop();

		int headerHeight = 0;
		if (firstVisiblePosition >= 1) {
			headerHeight = mHeaderHeight;
		}

		return -top + firstVisiblePosition * c.getHeight() + headerHeight;
	}

	@Override
	public void onScrollViewScroll(int scrollheight, int pagePosition) {
		if (pager.getCurrentItem() == pagePosition) {
			int scrollY = scrollheight;
			ViewHelper.setTranslationY(mHeader,
					Math.max(-scrollY, mMinHeaderTranslation));
		}
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onClick(View v) {
		// TODO Auto-generated method stub
		if(v.getId()==R.id.btn_left_menu){
			finish();
		}
	}
}
