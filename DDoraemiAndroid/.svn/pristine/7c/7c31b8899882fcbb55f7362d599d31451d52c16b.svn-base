package ddoraemi.start;

import retrofit.Callback;
import retrofit.RestAdapter;
import retrofit.RetrofitError;
import retrofit.client.Response;

import com.google.gson.JsonArray;
import com.google.gson.JsonObject;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import ddoraemi.appcontroller.AppController;
import ddoraemi.dialog.Dialog_BaseDialog;
import ddoraemi.joining.view.JoinActivity;
import ddoraemi.retrofit.Retrofit;


public class LoginActivity extends Activity implements OnClickListener{
	Button bt_join,bt_login,bt_kakaojoin;
	TextView find_passwd;
	EditText id,passwd;
	AppController app;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_login);
		init();
	}
	public void init()
	{
		app=(AppController)getApplicationContext();
		bt_login=(Button)findViewById(R.id.login_activity_LoginButton);
		bt_join=(Button)findViewById(R.id.login_activity_JoinButton);
		bt_kakaojoin=(Button)findViewById(R.id.login_activity_KAKAOJoinButton);
		find_passwd=(TextView)findViewById(R.id.login_activity_FindPasswd);
		id=(EditText)findViewById(R.id.login_activity_IDEditText);
		passwd=(EditText)findViewById(R.id.login_activity_PasswordEditText);
		bt_login.setOnClickListener(this);
		bt_join.setOnClickListener(this);
		bt_kakaojoin.setOnClickListener(this);
		find_passwd.setOnClickListener(this);
	}
	

	@Override
	public void onClick(View v) {
		if(v.getId()==R.id.login_activity_LoginButton)//로그인 눌렀때
		{
			///이후 통신구문 성공시 Intent SplashActivity로 intent
			//로그인 성공하면 Intent로 id 넘겨줘야함.
		}
		else if(v.getId()==R.id.login_activity_JoinButton)
		{
			Intent intent=new Intent(LoginActivity.this,JoinActivity.class);
			startActivity(intent);
		}
		else if(v.getId()==R.id.login_activity_KAKAOJoinButton)
		{
			
		}
		else if(v.getId()==R.id.login_activity_FindPasswd)
		{
			
		}
		else;
	}
	public void requestLogin()
	{
		final String str_id=id.getText().toString();
		final String str_passwd=passwd.getText().toString();
		final ProgressDialog progressdialog = new ProgressDialog(this);
		progressdialog.setMessage("잠시만 기다려주세요");
		progressdialog.setIndeterminate(true);
		progressdialog.setCancelable(false);
		progressdialog.show();
		final JsonObject info = new JsonObject();
		info.addProperty("u_id", str_id);
		info.addProperty("password", str_passwd);
		new Thread(new Runnable() {
			public void run() {
				try {
					RestAdapter restAdapter = new RestAdapter.Builder()
							.setEndpoint(Retrofit.ROOT) // call your base url
							.build();
					Retrofit retofit = restAdapter.create(Retrofit.class);
					retofit.requestLogin(info, new Callback<String>() {
						@Override
						public void success(String result, Response response) {
							progressdialog.dismiss();
								if(result.equals("500"))
								{
									app.setId(str_id);
									Intent intent = new Intent(LoginActivity.this, SplashActivity.class);
									LoginActivity.this.startActivity(intent);
								}
								else
								{
									Dialog_BaseDialog dialog = new Dialog_BaseDialog(
											LoginActivity.this,
										"로그인에 실패하였습니다.\n아이디와 비밀번호를 학인해주세요.");
									dialog.show();
								}

							
						}

						@Override
						public void failure(RetrofitError retrofitError) {
							progressdialog.dismiss();

								Dialog_BaseDialog dialog = new Dialog_BaseDialog(
										LoginActivity.this,
										"서버와 통신에 실패하였습니다.\n잠시후 다시 시도해주세요.");
								dialog.show();
							
						}
					});

				} catch (Throwable ex) {
					ex.printStackTrace();
					progressdialog.dismiss();
					if (LoginActivity.this != null) {

						Dialog_BaseDialog dialog = new Dialog_BaseDialog(
								LoginActivity.this,
								"서버와 통신에 실패하였습니다.\n잠시후 다시 시도해주세요.");
						dialog.show();
					}
				}
			}
		}).start();
	}
}
