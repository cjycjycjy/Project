package ddoraemi.myinfopage.view;

import java.util.ArrayList;
import java.util.Hashtable;
import java.util.List;

import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.util.SparseArrayCompat;
import android.support.v4.view.ViewPager;
import android.util.TypedValue;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AbsListView;
import android.widget.TextView;

import com.android.volley.RequestQueue;
import com.android.volley.toolbox.ImageLoader;
import com.android.volley.toolbox.NetworkImageView;
import com.astuetz.PagerSlidingTabStrip;
import com.nineoldandroids.view.ViewHelper;

import ddoraemi.appcontroller.AppController;
import ddoraemi.detailediteminfo.model.Afterword;
import ddoraemi.detailediteminfo.view.ScrollTabHolder;
import ddoraemi.detailediteminfo.view.ScrollTabHolderFragment;
import ddoraemi.home.model.Group;
import ddoraemi.home.model.ProgramData;
import ddoraemi.home.view.Home_MainView;
import ddoraemi.myinfopage.presenter.MyPagePresenter;
import ddoraemi.myinfopage.presenter.MyPagePresenterInterface;
import ddoraemi.start.R;
import ddoraemi.volley.VolleySingleton;

public class MyPageView extends Fragment implements MypageViewInterface,
		ScrollTabHolder, ViewPager.OnPageChangeListener {
	private MyPagePresenterInterface Presenter;
	private PagerSlidingTabStrip tabs;
	private ViewPager pager;
	private PagerAdapter adapter;
	private AppController app;
	TextView tv_id;
	NetworkImageView avatar;
	ImageLoader mImageLoader;
	RequestQueue mRequestQueue;

	private int mMinHeaderHeight;//
	private int mHeaderHeight;//
	private int mMinHeaderTranslation;//
	View mHeader;//

	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		View v = inflater.inflate(R.layout.fragment_mypage, null);
		init(v);
		return v;
	}

	public void init(View v) {
		mRequestQueue = VolleySingleton.getInstance(getActivity())
				.getRequestQueue();
		mImageLoader = VolleySingleton.getInstance(getActivity())
				.getImageLoader();
		app = (AppController) getActivity().getApplicationContext();
		pager = (ViewPager) v.findViewById(R.id.fragment_mypage_pager);
		tabs = (PagerSlidingTabStrip) v.findViewById(R.id.fragment_mypage_tabs);
		tv_id = (TextView) v.findViewById(R.id.fragment_mypage_Tv_id);

		mMinHeaderHeight = getResources().getDimensionPixelSize(
				R.dimen.min_mypage_header_height);
		mHeaderHeight = getResources().getDimensionPixelSize(
				R.dimen.mypage_headerheight);
		mMinHeaderTranslation = -mMinHeaderHeight;
		mHeader = v.findViewById(R.id.fragment_mypage_header);
		tv_id.setText(app.getId());
		Presenter = new MyPagePresenter(this);
		Presenter.validateCredentials("getMypageInfo");
		avatar = (NetworkImageView) v
				.findViewById(R.id.fragment_mypage_userprofileImg);
		avatar.setImageUrl(app.getServerIp() + "/user_photo/"
				+ app.getUser().getU_photo_url(), mImageLoader);

	}

	@Override
	public void setViewPager(View v, ArrayList<Group> particiategroup,
			ArrayList<ProgramData> wishprogram, ArrayList<Group> pastprogram) {
		adapter = new PagerAdapter(getChildFragmentManager(), particiategroup,
				wishprogram, pastprogram);
		adapter.setTabHolderScrollingContent(this);
		pager.setAdapter(adapter);
		pager.setOffscreenPageLimit(3);
		final int pageMargin = (int) TypedValue.applyDimension(
				TypedValue.COMPLEX_UNIT_DIP, 4, getResources()
						.getDisplayMetrics());
		pager.setPageMargin(pageMargin);
		tabs.setViewPager(pager);
		tabs.setShouldExpand(true);
		tabs.setOnPageChangeListener(this);
	}

	@Override
	public void navigateToNext() {
		// TODO Auto-generated method stub

	}

	public MyPagePresenterInterface getPresenter() {
		return Presenter;
	}

	public class PagerAdapter extends FragmentPagerAdapter {
		private String[] Title = { getString(R.string.joining_group),
				getString(R.string.wish_program),
				getString(R.string.past_program) };
		ArrayList<Group> particiategroup;
		ArrayList<ProgramData> wishprogram;
		ArrayList<Group> pastprogram;

		private SparseArrayCompat<ScrollTabHolder> mScrollTabHolders;
		private ScrollTabHolder mListener;

		public PagerAdapter(FragmentManager fm,
				ArrayList<Group> particiategroup,
				ArrayList<ProgramData> wishprogram,
				ArrayList<Group> pastprogram) {
			super(fm);
			mScrollTabHolders = new SparseArrayCompat<ScrollTabHolder>();
			this.particiategroup = new ArrayList<Group>();
			this.wishprogram = new ArrayList<ProgramData>();
			this.pastprogram = new ArrayList<Group>();
			this.particiategroup.addAll(particiategroup);
			this.wishprogram.addAll(wishprogram);
			this.pastprogram.addAll(pastprogram);
		}

		public void setTabHolderScrollingContent(ScrollTabHolder listener) {
			mListener = listener;
		}

		@Override
		public int getItemPosition(Object object) {
			return POSITION_NONE;
		}

		@Override
		public int getCount() {
			return Title.length;
		}

		@Override
		public Fragment getItem(int position) {
			ScrollTabHolderFragment fragment;
			if (position == 0) {
				fragment = new MyPage_ParticipateView(particiategroup);
			} else if (position == 1) {
				fragment = new MyPage_WishView(wishprogram);
			} else {
				fragment = new MyPage_PastView(pastprogram);
			}
			mScrollTabHolders.put(position, fragment);
			fragment.setScrollTabHolder(mListener);
			return fragment;

		}

		@Override
		public CharSequence getPageTitle(int position) {
			switch (position) {
			case 0:
				return Title[0];
			case 1:
				return Title[1];
			case 2:
			default:
				return Title[2];
			}
		}

		public SparseArrayCompat<ScrollTabHolder> getScrollTabHolders() {
			return mScrollTabHolders;
		}
	}

	@Override
	public void onPageScrollStateChanged(int arg0) {
		// nothing
	}

	@Override
	public void onPageScrolled(int position, float positionOffset,
			int positionOffsetPixels) {
		// nothing
	}

	@Override
	public void onPageSelected(int position) {
		SparseArrayCompat<ScrollTabHolder> scrollTabHolders = adapter
				.getScrollTabHolders();
		ScrollTabHolder currentHolder = scrollTabHolders.valueAt(position);

		currentHolder.adjustScroll((int) (mHeader.getHeight() + ViewHelper
				.getTranslationY(mHeader)));
	}

	@Override
	public void setArrayList(ArrayList<Group> partcipategroup,
			ArrayList<ProgramData> wishprogram, ArrayList<Group> pastprogram) {
		setViewPager(getView(), partcipategroup, wishprogram, pastprogram);

	}

	@Override
	public void onScroll(AbsListView view, int firstVisibleItem,
			int visibleItemCount, int totalItemCount, int pagePosition) {
		if (pager.getCurrentItem() == pagePosition) {
			int scrollY = getScrollY(view);
			ViewHelper.setTranslationY(mHeader,
					Math.max(-scrollY, mMinHeaderTranslation));
		}
	}

	@Override
	public void adjustScroll(int scrollHeight) {
		// nothing
	}

	public int getScrollY(AbsListView view) {
		View c = view.getChildAt(0);
		if (c == null) {
			return 0;
		}

		int firstVisiblePosition = view.getFirstVisiblePosition();
		int top = c.getTop();

		int headerHeight = 0;
		if (firstVisiblePosition >= 1) {
			headerHeight = mHeaderHeight;
		}

		return -top + firstVisiblePosition * c.getHeight() + headerHeight;
	}

	@Override
	public void onScrollViewScroll(int scrollheight, int pagePosition) {
		if (pager.getCurrentItem() == pagePosition) {
			int scrollY = scrollheight;
			ViewHelper.setTranslationY(mHeader,
					Math.max(-scrollY, mMinHeaderTranslation));
		}
		// TODO Auto-generated method stub

	}

	@Override
	public void notifyAfterword(ArrayList<Group> renewitem) {
		FragmentManager fm=getChildFragmentManager();
		List<Fragment> fragments = fm.getFragments();
        if (fragments != null) {
            for (Fragment fragment : fragments) {
            	if(fragment instanceof MyPage_PastView )
                ((MyPage_PastView)fragment).notifyWritenAfterword(renewitem);
            }
        }
		
	}
}
