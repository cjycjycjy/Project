package ddoraemi.start;

import retrofit.Callback;
import retrofit.RestAdapter;
import retrofit.RetrofitError;
import retrofit.client.Response;
import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import com.google.gson.JsonObject;

import ddoraemi.appcontroller.AppController;
import ddoraemi.dialog.Dialog_BaseDialog;
import ddoraemi.joining.view.JoinActivity;
import ddoraemi.retrofit.Retrofit;

public class LoginActivity extends Activity implements OnClickListener {
	Button bt_join, bt_login, bt_kakaojoin;
	TextView find_passwd;
	EditText id, passwd;
	AppController app;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_login);
		init();
	}

	public void init() {
		app = (AppController) getApplicationContext();
		bt_login = (Button) findViewById(R.id.login_activity_LoginButton);
		bt_join = (Button) findViewById(R.id.login_activity_JoinButton);
		bt_kakaojoin = (Button) findViewById(R.id.login_activity_KAKAOJoinButton);
		find_passwd = (TextView) findViewById(R.id.login_activity_FindPasswd);
		id = (EditText) findViewById(R.id.login_activity_IDEditText);
		passwd = (EditText) findViewById(R.id.login_activity_PasswordEditText);
		bt_login.setOnClickListener(this);
		bt_join.setOnClickListener(this);
		bt_kakaojoin.setOnClickListener(this);
		find_passwd.setOnClickListener(this);
	}

	@Override
	public void onClick(View v) {
		if (v.getId() == R.id.login_activity_LoginButton)// �α��� ������
		{
			requestLogin();
		} else if (v.getId() == R.id.login_activity_JoinButton) {
			Intent intent = new Intent(LoginActivity.this, JoinActivity.class);
			startActivity(intent);
		} else if (v.getId() == R.id.login_activity_KAKAOJoinButton) {

		} else if (v.getId() == R.id.login_activity_FindPasswd) {

		} else
			;
	}

	public void requestLogin() {
		final String u_id = id.getText().toString();
		final String password = passwd.getText().toString();
		final ProgressDialog progressdialog = new ProgressDialog(this);
		progressdialog.setMessage("로그인 중입니다.");
		progressdialog.setIndeterminate(true);
		progressdialog.setCancelable(false);
		progressdialog.show();
		new Thread(new Runnable() {
			public void run() {
				try {
					RestAdapter restAdapter = new RestAdapter.Builder()
							.setEndpoint(Retrofit.ROOT) // call your base url
							.build();
					Retrofit retofit = restAdapter.create(Retrofit.class);
					retofit.requestLogin(u_id, password,
							new Callback<String>() {
								@Override
								public void success(String result,
										Response response) {
									progressdialog.dismiss();
									if (result.equals("500")) {
										app.setId(u_id);
										Intent intent = new Intent(
												LoginActivity.this,
												SplashActivity.class);
										LoginActivity.this
												.startActivity(intent);
										LoginActivity.this.finish();
									} else {
										Dialog_BaseDialog dialog = new Dialog_BaseDialog(
												LoginActivity.this,
												"로그인에 실패하였습니다.\n아이디와 비밀번호를 확인해주세요.");
										dialog.show();
									}

								}

								@Override
								public void failure(RetrofitError retrofitError) {
									progressdialog.dismiss();

									Dialog_BaseDialog dialog = new Dialog_BaseDialog(
											LoginActivity.this,
											getString(R.string.failed_dialog));
									dialog.show();

								}
							});

				} catch (Throwable ex) {
					ex.printStackTrace();
					progressdialog.dismiss();
					if (LoginActivity.this != null) {

						Dialog_BaseDialog dialog = new Dialog_BaseDialog(
								LoginActivity.this,
								getString(R.string.failed_dialog));
						dialog.show();
					}
				}
			}
		}).start();
	}
}
