package ddoraemi.detailedgroupinfo.view;

import java.util.ArrayList;
import java.util.List;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.app.FragmentTransaction;
import android.support.v4.util.SparseArrayCompat;
import android.support.v4.view.ViewPager;
import android.util.TypedValue;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AbsListView;
import android.widget.ImageView;
import android.widget.RelativeLayout;

import com.android.volley.RequestQueue;
import com.android.volley.toolbox.ImageLoader;
import com.android.volley.toolbox.NetworkImageView;
import com.astuetz.PagerSlidingTabStrip;
import com.nineoldandroids.view.ViewHelper;
import com.skp.Tmap.TMapView;

import ddoraemi.appcontroller.AppController;
import ddoraemi.detailedgroupinfo.model.QnA;
import ddoraemi.detailedgroupinfo.presenter.DetailedGroupInfo_Presenter;
import ddoraemi.detailedgroupinfo.presenter.DetailedGroupInfo_Presenter_Interface;
import ddoraemi.detailediteminfo.model.Afterword;
import ddoraemi.detailediteminfo.view.DetailedItemInfo_AfterwordView;
import ddoraemi.detailediteminfo.view.DetailedItemInfo_PictureView;
import ddoraemi.detailediteminfo.view.ScrollTabHolder;
import ddoraemi.detailediteminfo.view.ScrollTabHolderFragment;
import ddoraemi.home.model.Group;
import ddoraemi.start.R;
import ddoraemi.volley.VolleySingleton;

public class DetailedGroupInfo_View extends FragmentActivity implements DetailedGroupInfo_View_Interface,
ScrollTabHolder,
ViewPager.OnPageChangeListener , OnClickListener{

	
	private PagerSlidingTabStrip tabs;
	private ViewPager pager;
	private PagerAdapter adapter;
	private Group group;
	private ImageView iv_type;
	private ImageView btn_back;
	private RelativeLayout t_map = null;
	private int mMinHeaderHeight;//
	private int mHeaderHeight;//
	private int mMinHeaderTranslation;//
	TMapView t_MapView;
	View mHeader;//
	ImageView btn_pic;
	DetailedGroupInfo_Presenter_Interface presenter;
	
	AppController app;
	RequestQueue mRequestQueue;
	ImageLoader mImageLoader;
	NetworkImageView avatar;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_detailedgroupinfo);
		mRequestQueue = VolleySingleton.getInstance(this).getRequestQueue();
		mImageLoader = VolleySingleton.getInstance(this).getImageLoader();
		app = (AppController)getApplicationContext();
		init();
	}
	
	@Override
	protected void onActivityResult(int arg0, int arg1, Intent intent) {
		// TODO Auto-generated method stub
		super.onActivityResult(arg0, arg1, intent);
		if(arg1==0){
			presenter.validatecredential("renew", group.getG_id(), intent,-1);
		}
		
	}
	@Override
	public void renewlistdata(Intent intent){
		QnA data = (QnA)intent.getSerializableExtra("item");
		int position = intent.getIntExtra("position",0);
		List<Fragment> fragments = getSupportFragmentManager().getFragments();
        if (fragments != null) {
            for (Fragment fragment : fragments) {
            	if(fragment instanceof DetailedGroupInfo_QnA_View )
                ((DetailedGroupInfo_QnA_View)fragment).renewData(data, position);
            }
        }
	}
	
	public void init(){
		mMinHeaderHeight = getResources().getDimensionPixelSize(
				R.dimen.min_header_height);
		mHeaderHeight = getResources().getDimensionPixelSize(
				R.dimen.header_height);
		mMinHeaderTranslation = -mMinHeaderHeight;
		mHeader = findViewById(R.id.detailedgroup_header);
		presenter = new DetailedGroupInfo_Presenter(this);
		Intent intent = getIntent();
		group = (Group) intent.getSerializableExtra("group");
		btn_pic = (ImageView)findViewById(R.id.btn_group_pic);
		btn_pic.setOnClickListener(this);
		btn_back = (ImageView) findViewById(R.id.btn_left_menu);
		btn_back.setOnClickListener(this);
		presenter.validatecredential("getdata", group.getG_id(),null,-1);
		avatar = (NetworkImageView)findViewById(R.id.iv_detailedgroup_challenge_image);
		avatar.setImageUrl(app.getServerIp()+"/program_photo/"+group.getP_photo_url(),mImageLoader);
		String e_name = group.getE_name();
		iv_type = (ImageView) findViewById(R.id.iv_challenge_type);
		if (e_name.equalsIgnoreCase(getString(R.string.culture))) {
			iv_type.setImageResource(R.drawable.bg_culture_icon);
		} else if (e_name.equalsIgnoreCase(getString(R.string.traditionalfood))) {
			iv_type.setImageResource(R.drawable.bg_traditionalfood_icon);
		} else if (e_name.equalsIgnoreCase(getString(R.string.planting))) {
			iv_type.setImageResource(R.drawable.bg_planting_icon);
		} else if (e_name.equalsIgnoreCase(getString(R.string.harvest))) {
			iv_type.setImageResource(R.drawable.bg_harvest_icon);
		} else if (e_name.equalsIgnoreCase(getString(R.string.craft))) {
			iv_type.setImageResource(R.drawable.bg_craft_icon);
		} else if (e_name.equalsIgnoreCase(getString(R.string.traditionalplay))) {
			iv_type.setImageResource(R.drawable.bg_traditionalplay_icon);
		} else if (e_name.equalsIgnoreCase(getString(R.string.nature))) {
			iv_type.setImageResource(R.drawable.bg_nature_icon);
		} else {
			iv_type.setImageResource(R.drawable.bg_cooking_icon);
		}

	}
	
	
	public void removeAllStack()// /Fragment 占쏙옙占쏙옙占쏙옙 占쌕븝옙占쏙옙.
	{
		FragmentManager fragmentmanager = getSupportFragmentManager();
		FragmentTransaction fragmenttransaction = fragmentmanager
				.beginTransaction();
		int cnt = fragmentmanager.getBackStackEntryCount();
		for (int i = 0; i < cnt; i++) {
			fragmentmanager.popBackStack();
		}
	}

	
	public class PagerAdapter extends FragmentPagerAdapter {
		private String[] Title = { "상세정보", "Q&A" };
		Group group;
		ArrayList<QnA> qna;
		private SparseArrayCompat<ScrollTabHolder> mScrollTabHolders;
		private ScrollTabHolder mListener;

		public PagerAdapter(FragmentManager fm, ArrayList<QnA> qna,
				Group group) {
			super(fm);
			mScrollTabHolders = new SparseArrayCompat<ScrollTabHolder>();
			this.group = group;
			this.qna = new ArrayList<QnA>();
			this.qna.addAll(qna);
		}

		public void setTabHolderScrollingContent(ScrollTabHolder listener) {
			mListener = listener;
		}

		@Override
		public int getItemPosition(Object object) {
			return POSITION_NONE;
		}

		@Override
		public int getCount() {
			return Title.length;
		}

		@Override
		public CharSequence getPageTitle(int position) {

			return Title[position];
		};

		@Override
		public Fragment getItem(int position) {
			ScrollTabHolderFragment fragment;
			if (position == 0) {
				fragment = new DetailedGroupInfo_InfoView(group);
			} else {
				fragment = new DetailedGroupInfo_QnA_View(qna,group.getG_id());
			}
			mScrollTabHolders.put(position, fragment);
			fragment.setScrollTabHolder(mListener);
			return fragment;

		}

		public SparseArrayCompat<ScrollTabHolder> getScrollTabHolders() {
			return mScrollTabHolders;
		}
	}
	
	@Override
	public void setViewPager(ArrayList<QnA> qna, Group group) {
		// TODO Auto-generated method stub
		pager = (ViewPager) findViewById(R.id.fragment_detailedgroupinfo_pager);
		tabs = (PagerSlidingTabStrip) findViewById(R.id.fragment_detailedgroupinfo_tabs);
		adapter = new PagerAdapter(getSupportFragmentManager(), qna, group);
		adapter.setTabHolderScrollingContent(this);
		pager.setAdapter(adapter);
		pager.setOffscreenPageLimit(2);
		final int pageMargin = (int) TypedValue.applyDimension(
				TypedValue.COMPLEX_UNIT_DIP, 4, getResources()
						.getDisplayMetrics());
		pager.setPageMargin(pageMargin);
		tabs.setViewPager(pager);
		tabs.setOnPageChangeListener(this);
	}

	@Override
	public void setqnalist(ArrayList<QnA> qna) {
		// TODO Auto-generated method stub
		setViewPager(qna, group);
	}

	@Override
	public void onPageScrollStateChanged(int arg0) {
		// nothing
	}

	@Override
	public void onPageScrolled(int position, float positionOffset,
			int positionOffsetPixels) {
		// nothing
	}

	@Override
	public void onPageSelected(int position) {
		SparseArrayCompat<ScrollTabHolder> scrollTabHolders = adapter
				.getScrollTabHolders();
		ScrollTabHolder currentHolder = scrollTabHolders.valueAt(position);

		currentHolder.adjustScroll((int) (mHeader.getHeight() + ViewHelper
				.getTranslationY(mHeader)));
	}

	@Override
	public void onScroll(AbsListView view, int firstVisibleItem,
			int visibleItemCount, int totalItemCount, int pagePosition) {
		if (pager.getCurrentItem() == pagePosition) {
			int scrollY = getScrollY(view);
			ViewHelper.setTranslationY(mHeader,
					Math.max(-scrollY, mMinHeaderTranslation));
		}
	}

	@Override
	public void adjustScroll(int scrollHeight) {
		// nothing
	}

	public int getScrollY(AbsListView view) {
		View c = view.getChildAt(0);
		if (c == null) {
			return 0;
		}

		int firstVisiblePosition = view.getFirstVisiblePosition();
		int top = c.getTop();

		int headerHeight = 0;
		if (firstVisiblePosition >= 1) {
			headerHeight = mHeaderHeight;
		}

		return -top + firstVisiblePosition * c.getHeight() + headerHeight;
	}

	@Override
	public void onScrollViewScroll(int scrollheight, int pagePosition) {
		if (pager.getCurrentItem() == pagePosition) {
			int scrollY = scrollheight;
			ViewHelper.setTranslationY(mHeader,
					Math.max(-scrollY, mMinHeaderTranslation));
		}
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onClick(View v) {
		// TODO Auto-generated method stub
		if(v.getId()==R.id.btn_left_menu){
			finish();
		}else if(v.getId()==R.id.btn_group_pic){
			presenter.validatecredential("getpic",-1, null, group.getP_id());
		}
	}

	@Override
	public void goToPic(int p_id) {
		// TODO Auto-generated method stub
		Intent intent = new Intent(this,DetailedGroupInfo_PictureView.class);
		intent.putExtra("p_id", p_id);
		startActivity(intent);
	}
}
