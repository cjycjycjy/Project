package com.fuck.hangang.dao;

import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.fuck.hangang.mapper.ContestMapper;
import com.fuck.hangang.vo.ContestPhotoVo;
import com.fuck.hangang.vo.ContestReplyOfReplyVo;
import com.fuck.hangang.vo.ContestReplyVo;
import com.fuck.hangang.vo.ContestVo;

@Service
public class ContestDao {
	@Resource
	private ContestMapper contestMapper;
	
	public void registcontest(ContestVo contestVo) {
		this.contestMapper.registcontest(contestVo);
	}
	
	public void registcontestphoto(int p_num, int p_index, String photo) {
		this.contestMapper.registcontestphoto(p_num, p_index, photo);
	}
	
	public List<ContestVo> getcontestfirst() {
		return this.contestMapper.getcontestfirst();
	}
	
	public List<ContestVo> getcontestlast(int lastnum) {
		return this.contestMapper.getcontestlast(lastnum);
	}
	
	public List<ContestPhotoVo> getcontestphoto(int p_num) {
		return this.contestMapper.getcontestphoto(p_num);
	}
	
	public int getcontestreplycount(int num) {
		return this.contestMapper.getcontestreplycount(num);
	}
	
	public int getcontestreplyofreplycount(int num, int r_num) {
		return this.contestMapper.getcontestreplyofreplycount(num, r_num);
	}
	
	public List<ContestReplyVo> getphotocontestreplyfirst(int num) {
		return this.contestMapper.getphotocontestreplyfirst(num);
	}
	
	public List<ContestReplyVo> getphotocontestreplylast(int num, int lastnum) {
		return this.contestMapper.getphotocontestreplylast(num, lastnum);
	}
	
	public void registphotocontestreply(int num, String u_id, String r_content) {
		this.contestMapper.registphotocontestreply(num, u_id, r_content);
	}
	
	public List<ContestReplyOfReplyVo> getphotocontestreplyofreplyfirst(int num, int r_num) {
		return this.contestMapper.getphotocontestreplyofreplyfirst(num, r_num);
	}
	
	public List<ContestReplyOfReplyVo> getphotocontestreplyofreplylast(int num, int r_num, int lastnum) {
		return this.contestMapper.getphotocontestreplyofreplylast(num, r_num, lastnum);
	}
	
	public void registphotocontestreplyofreply(int num, int r_num, String u_id, String rr_content) {
		this.contestMapper.registphotocontestreplyofreply(num, r_num, u_id, rr_content);
	}
	
	public void updatephotocontestreply(int num, int r_num, String r_content) {
		this.contestMapper.updatephotocontestreply(num, r_num, r_content);
	}
	
	public void updatephotocontestreplyofreply(int num, int r_num, int rr_num, String rr_content) {
		this.contestMapper.updatephotocontestreplyofreply(num, r_num, rr_num, rr_content);
	}
	
	public void deletephotocontestreply(int num, int r_num) {
		this.contestMapper.deletephotocontestreply(num, r_num);
	}
	
	public void deletephotocontestreply_ofallreply(int num, int r_num) {
		this.contestMapper.deletephotocontestreply_ofallreply(num, r_num);
	}
	
	public void deletephotocontestreplyofreply(int num, int r_num, int rr_num) {
		this.contestMapper.deletephotocontestreplyofreply(num, r_num, rr_num);
	}
	
	public void deletephotocontest(int num) {
		this.contestMapper.deletephotocontest(num);
	}
	
	public void deletephotocontest_photo(int num) {
		this.contestMapper.deletephotocontest_photo(num);
	}
	
	public void deletephotocontest_replyofallreply(int num) {
		this.contestMapper.deletephotocontest_replyofallreply(num);
	}
	
	public void deletephotocontest_allreply(int num) {
		this.contestMapper.deletephotocontest_allreply(num);
	}
}
