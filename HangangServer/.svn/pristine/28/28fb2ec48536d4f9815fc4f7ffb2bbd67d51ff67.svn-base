package com.fuck.hangang.dao;

import java.util.List;

import javax.annotation.Resource;

import org.apache.ibatis.annotations.Param;
import org.json.simple.JSONObject;
import org.junit.runners.Parameterized.Parameters;
import org.springframework.stereotype.Service;

import com.fuck.hangang.mapper.NoticeMapper;
import com.fuck.hangang.vo.NoticePhotoVo;
import com.fuck.hangang.vo.NoticeVo;
import com.fuck.hangang.vo.NoticecommentVo;
import com.fuck.hangang.vo.NoticecommentofcommentVo;

@Service
public class NoticeDao {
	@Resource
	NoticeMapper noticeMapper;

	public List<NoticeVo> getnotice() {
		return this.noticeMapper.getnotice();
	}
	
	public String getnoticecommentu_id(@Param("n_c_num") int n_c_num) {
		return this.noticeMapper.getnoticecommentu_id(n_c_num);
	}
	
	public String getnoticecommentu_photo(@Param("u_id") String u_id) {
		return this.noticeMapper.getnoticecommentu_photo(u_id);
	}

	public void registnotice(@Param("n_title") String n_title, @Param("n_contents") String n_contents, @Param("n_type") int n_type) {
		this.noticeMapper.registnotice(n_title, n_contents, n_type);
	}
	
	public void registnoticephoto(@Param("n_num") int n_num,@Param("n_index") int n_index, @Param("n_photo_url") String n_photo_url) {
		this.noticeMapper.registnoticephoto(n_num,n_index, n_photo_url);
	}

	public List<NoticecommentVo> getnoticecomment(@Param("n_num") int n_num, @Param("lastnum") int lastnum,
			@Param("count") int count) {
		return this.noticeMapper.getnoticecomment(n_num, lastnum, count);
	}

	public void registnoticecomment(NoticecommentVo noticecommentVo) {
		this.noticeMapper.registnoticecomment(noticecommentVo);

	}

	public List<NoticecommentofcommentVo> getnoticecommentofcomment(@Param("n_num") int n_num,
			@Param("n_c_num") int n_c_num, @Param("lastnum") int lastnum, @Param("count") int count) {
		return this.noticeMapper.getnoticecommentofcomment(n_num, n_c_num, lastnum, count);
	}

	public void registnoticecommentofcomment(NoticecommentofcommentVo noticecommentofcommentVo) {
		this.noticeMapper.registnoticecommentofcomment(noticecommentofcommentVo);

	}

	public void deletenotice(@Param("n_num") int n_num) {
		this.noticeMapper.deletenotice(n_num);
	}

	public void deletenoticecomment(@Param("n_num") int n_num, @Param("n_c_num") int n_c_num) {
		this.noticeMapper.deletenoticecomment(n_num, n_c_num);
	}
	
	public int getnoticecommentcount(@Param("n_num") int n_num) {
		return this.noticeMapper.getnoticecommentcount(n_num);
	}
	
	public int getnoticecommentofcommentcount(@Param("n_num") int n_num, @Param("n_c_num") int n_c_num) {
		return this.noticeMapper.getnoticecommentofcommentcount(n_num, n_c_num);
	}

}
