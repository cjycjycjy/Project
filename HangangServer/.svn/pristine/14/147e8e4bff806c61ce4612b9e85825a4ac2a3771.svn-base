package com.fuck.hangang.controller;

import java.io.BufferedOutputStream;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.Base64;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;

import javax.annotation.Resource;

import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.fuck.hangang.dao.CheerfulDao;
import com.fuck.hangang.vo.CheerfulVo;
import com.fuck.hangang.vo.ScheduleVo;
import com.fuck.hangang.vo.TeamGalleryVo;
import com.fuck.hangang.vo.TeamVo;
import com.fuck.hangang.vo.UserVo;

@Controller
public class CheerfulController {
	@Resource
	CheerfulDao cheerfulDao;

	@RequestMapping(value = "/getcheerful", method = RequestMethod.GET)
	public @ResponseBody <T> HashMap<String, T> getteambloginfo(@RequestParam("t_num")
	int t_num, @RequestParam("lastnum") int lastnum){
		int count = lastnum+20;
		HashMap<String, T> resultHashMap = new HashMap<String, T>();
		if(t_num != -1){
			List<CheerfulVo> resultCheerfulVo = cheerfulDao.getteamcheerful(t_num, lastnum, count);
			for(int i=0; i<resultCheerfulVo.size(); i++){
				resultCheerfulVo.get(i).setCh_c_num(cheerfulDao.getcheerfulcommentnum(resultCheerfulVo.get(i).getCh_num()));
				resultCheerfulVo.get(i).setU_permission(cheerfulDao.getcheerfuluserinfo(resultCheerfulVo.get(i).getU_id()).getU_permission());
				resultCheerfulVo.get(i).setU_photo(cheerfulDao.getcheerfuluserinfo(resultCheerfulVo.get(i).getU_id()).getU_photo());

			}
			resultHashMap.put("result", (T)"Success");
			resultHashMap.put("cheer", (T)resultCheerfulVo);
			return resultHashMap;
		}else{
			List<CheerfulVo> resultCheerfulVo = cheerfulDao.gettotalcheerful(lastnum, count);
			for(int i=0; i<resultCheerfulVo.size(); i++){
				resultCheerfulVo.get(i).setCh_c_num(cheerfulDao.getcheerfulcommentnum(resultCheerfulVo.get(i).getCh_num()));
				resultCheerfulVo.get(i).setU_permission(cheerfulDao.getcheerfuluserinfo(resultCheerfulVo.get(i).getU_id()).getU_permission());
				resultCheerfulVo.get(i).setU_photo(cheerfulDao.getcheerfuluserinfo(resultCheerfulVo.get(i).getU_id()).getU_photo());
			}
			resultHashMap.put("result", (T)"Success");
			resultHashMap.put("cheer", (T)resultCheerfulVo);
			return resultHashMap;
		}

	}

	@RequestMapping(value = "/registcheerful", method = RequestMethod.GET)
	public @ResponseBody String registcheerful(@RequestParam("u_id") String u_id, @RequestParam("t_num") int t_num,
			@RequestParam("ch_contents") String ch_content, @RequestParam("ch_photo") String ch_photo) {
		String filePath = "photo/cheerful/";
		String savePath = "C:/Users/user/Desktop/springwork/Hangang/src/main/webapp/photo/cheerful/";
		Calendar calendar = Calendar.getInstance();
		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMddHHmmssSSS");
		String time =  dateFormat.format(calendar.getTime()).toString();
		try {
			if(!ch_photo.equalsIgnoreCase("empty")){
				writeFile(ch_photo, savePath, t_num,time);
				ch_photo = filePath + t_num + "_" +time+".jpg";
			}			
			cheerfulDao.registcheerfule(u_id, t_num, ch_content, ch_photo);
		}catch(Exception e){
			e.printStackTrace();
			return "Failed";
		}
		return "Success";
	}
	public String writeFile(String file, String savePath, int t_num,String time) throws Exception {
		String n_photo_url = t_num + "_" + time+".jpg";
		BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(savePath + n_photo_url));
		bos.write(Base64.getDecoder().decode(file));
		bos.flush();
		bos.close();
		return n_photo_url;
	}
}
