package com.fuck.hangang.controller;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.util.HashMap;
import java.util.List;

import javax.annotation.Resource;

import org.apache.commons.codec.binary.Base64;
import org.codehaus.jackson.map.ObjectMapper;
import org.json.simple.JSONObject;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.fuck.hangang.dao.AdminDao;
import com.fuck.hangang.vo.AdminBoardPhotoVo;
import com.fuck.hangang.vo.AdminBoardVo;

@Controller
public class AdminController {
	@Resource
	AdminDao adminDao;
	
	String filePath = "photo/adminboard/";
	String savePath = "C:/Users/user/Desktop/springwork/Hangang/src/main/webapp/photo/adminboard/";
	
	
	@RequestMapping(value = "/registadminboard", method = RequestMethod.POST)
	public @ResponseBody <T> HashMap<String, T> registadminboard(@RequestBody JSONObject json) {
		
		HashMap<String, T> resultHashMap = new HashMap<String, T>();
		
		try {
			AdminBoardVo adminboardVo = new AdminBoardVo();
			ObjectMapper mapper = new ObjectMapper();
			adminboardVo = mapper.readValue(json.toString(), AdminBoardVo.class);
			
			if(adminboardVo.getPhoto().size() == 0) {
				adminDao.registadminboard(adminboardVo);
			}else {
				adminDao.registadminboard(adminboardVo);
				
				List<AdminBoardPhotoVo> a_photo = adminboardVo.getPhoto();
				
				for(int i = 0; i < a_photo.size(); i++) {
					String a_photo_url = writeFile(a_photo.get(i).getA_photo_url(), savePath, adminboardVo.getA_num(), i);
					adminDao.registadminboardphoto(adminboardVo.getA_num(), i, a_photo_url);
				}
			}
				
			resultHashMap.put("result", (T) "Success");
			return resultHashMap;
			
		}catch(Exception e) {
			e.printStackTrace();
			resultHashMap.put("result", (T) "Failed");
			return resultHashMap;
		}
		
	}
	
	public String writeFile(String file, String savePath, int a_num, int a_index) throws Exception {
		String a_photo_url = a_num + "_" + a_index + ".jpg";
		BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(savePath + a_photo_url));
		bos.write(Base64.decodeBase64(file));
		bos.flush();
		bos.close();
		return filePath + a_photo_url;
	}

	public boolean deleteFile(String filePath) throws Exception {

		File delete_file = new File("C:/Users/user/Desktop/springwork/Hangang/src/main/webapp/" + filePath);
		if (!delete_file.delete())
			return false;

		return true;
	}
	
	
}
